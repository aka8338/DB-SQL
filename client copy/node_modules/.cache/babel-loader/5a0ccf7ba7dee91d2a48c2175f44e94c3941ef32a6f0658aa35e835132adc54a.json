{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\db\\\\DB-SQL\\\\client\\\\src\\\\user\\\\Contact\\\\Contact.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your_stripe_public_key');\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmCardPayment('client_secret_from_backend', {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: 'Demo User'\n        }\n      }\n    });\n    if (error) {\n      setError(error.message);\n    } else if (paymentIntent.status === 'succeeded') {\n      setSuccess(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || !elements,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment successful!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"DYGZq6nkkCRMg1GI4A+u/XroGT4=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst App = () => {\n  _s2();\n  const [clientSecret, setClientSecret] = useState('');\n  const createPaymentIntent = async () => {\n    const response = await fetch('http://localhost:3000/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 1000\n      }) // Amount in cents\n    });\n    const data = await response.json();\n    setClientSecret(data.clientSecret);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Demo Bank Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPaymentIntent,\n      children: \"Create Payment Intent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      options: {\n        clientSecret\n      },\n      children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"mpFyuQH3YoKFO7AooS5RXRgzT5s=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["CardElement","Elements","useElements","useStripe","loadStripe","React","useState","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","stripe","elements","error","setError","success","setSuccess","handleSubmit","event","preventDefault","paymentIntent","confirmCardPayment","payment_method","card","getElement","billing_details","name","message","status","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","App","_s2","clientSecret","setClientSecret","createPaymentIntent","response","fetch","method","headers","body","JSON","stringify","amount","data","json","onClick","options","_c2","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/db/DB-SQL/client/src/user/Contact/Contact.js"],"sourcesContent":["import { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport React, { useState } from 'react';\r\n\r\nconst stripePromise = loadStripe('your_stripe_public_key');\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { error, paymentIntent } = await stripe.confirmCardPayment('client_secret_from_backend', {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: 'Demo User',\r\n        },\r\n      },\r\n    });\r\n\r\n    if (error) {\r\n      setError(error.message);\r\n    } else if (paymentIntent.status === 'succeeded') {\r\n      setSuccess(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <button type=\"submit\" disabled={!stripe || !elements}>Pay</button>\r\n      {error && <div>{error}</div>}\r\n      {success && <div>Payment successful!</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [clientSecret, setClientSecret] = useState('');\r\n\r\n  const createPaymentIntent = async () => {\r\n    const response = await fetch('http://localhost:3000/create-payment-intent', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ amount: 1000 }), // Amount in cents\r\n    });\r\n    const data = await response.json();\r\n    setClientSecret(data.clientSecret);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Demo Bank Payment</h1>\r\n      <button onClick={createPaymentIntent}>Create Payment Intent</button>\r\n      {clientSecret && (\r\n        <Elements stripe={stripePromise} options={{ clientSecret }}>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}